# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\1_university\Anul III\1_Sem1\BD\BD-Tema\newManga.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3 as sl

class Ui_MangaWindow(object):
    def discard(self):
        self.titleEdit.clear()
        self.totalReadEdit.clear()
        self.chaptersReadEdit.clear()
        self.scoreComboBox.setCurrentIndex(0)
        self.genreComboBox.setCurrentIndex(0)
        self.statusComboBox.setCurrentIndex(0)
        self.authorComboBox.setCurrentIndex(0)

    def addManga(self,MangaWindow):
        con = sl.connect('TEMA.DB')
        cursor = con.cursor()
        cursor.execute("SELECT manga_id  FROM Manga_List")
        results = cursor.fetchall()
        max = results[0][0]
        print(max)
        for r in results:
            if (max < r[0]):
                max = r[0]
        print(max)
        max = max + 1

        sql = 'INSERT INTO Manga_List (manga_id,manga_name) values( ?, ?)'
        data = [
            (max,self.titleEdit.text())
        ]
        with con:
            con.executemany(sql, data)

        ln=self.authorComboBox.currentText()
        print(ln)
        cursor2 = con.cursor()
        cursor2.execute("SELECT author_id  FROM Author WHERE last_name=?",(ln,))
        aid=cursor2.fetchall()
        aidd=aid[0][0]
        print(aidd)

        sql2 = 'INSERT INTO Manga (name,genre,score,status,total_chapters,chapters_read,manga_id,author_id) values(?,?,?,?,?,?,?,?)'
        data2 = [
            (self.titleEdit.text(),self.genreComboBox.currentText(),self.scoreComboBox.currentText(),self.statusComboBox.currentText()
             ,self.totalReadEdit.text(),self.chaptersReadEdit.text(),max,aidd)
        ]
        with con:
            con.executemany(sql2, data2)
        '''
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_MangaWindow()
        self.ui.setupUi(self.window, MangaWindow)
        self.window.show()
        '''
    def home(self,main_win,current_win):                    #MA INTORC LA HOME
        current_win.close()
        main_win.show()


    def setupUi(self, MangaWindow,MainWindow):
        #MANGA WINDOW
        MangaWindow.setObjectName("MangaWindow")
        MangaWindow.resize(805, 700)
        MangaWindow.setMinimumSize(QtCore.QSize(805, 700))
        MangaWindow.setMaximumSize(QtCore.QSize(805, 700))
        MangaWindow.setStyleSheet("background-color: rgb(151, 232, 255);")
        self.centralwidget = QtWidgets.QWidget(MangaWindow)
        self.centralwidget.setObjectName("centralwidget")

        # TITLE LABEL
        self.titleLabel = QtWidgets.QLabel(self.centralwidget)
        self.titleLabel.setGeometry(QtCore.QRect(20, 50, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.titleLabel.setFont(font)
        self.titleLabel.setObjectName("titleLabel")

        # AUTHOR LABEL
        self.authorLabel = QtWidgets.QLabel(self.centralwidget)
        self.authorLabel.setGeometry(QtCore.QRect(20, 100, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.authorLabel.setFont(font)
        self.authorLabel.setObjectName("authorLabel")

        #GENRE LABEL
        self.genreLabel = QtWidgets.QLabel(self.centralwidget)
        self.genreLabel.setGeometry(QtCore.QRect(20, 140, 71, 51))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.genreLabel.setFont(font)
        self.genreLabel.setObjectName("genreLabel")

        #SCORE LABEL
        self.scoreLabel = QtWidgets.QLabel(self.centralwidget)
        self.scoreLabel.setGeometry(QtCore.QRect(30, 400, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.scoreLabel.setFont(font)
        self.scoreLabel.setObjectName("scoreLabel")

        # TITLE EDIT
        self.titleEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.titleEdit.setGeometry(QtCore.QRect(180, 40, 451, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.titleEdit.setFont(font)
        self.titleEdit.setStyleSheet("QLineEdit{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"}\n"
"\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(111, 165, 171);\n"
"}\n"
"")
        self.titleEdit.setText("")
        self.titleEdit.setObjectName("titleEdit")

        # CHAPTERS READ EDIT
        self.totalReadEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.totalReadEdit.setGeometry(QtCore.QRect(180, 270, 221, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.totalReadEdit.setFont(font)
        self.totalReadEdit.setStyleSheet("QLineEdit{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"}\n"
"\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(111, 165, 171);\n"
"}\n"
"")
        self.totalReadEdit.setObjectName("totalReadEdit")

        # ADD BUTTON
        self.addToListButton = QtWidgets.QPushButton(self.centralwidget)
        self.addToListButton.clicked.connect(lambda: self.addManga(MangaWindow))
        self.addToListButton.setGeometry(QtCore.QRect(620, 610, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(15)
        self.addToListButton.setFont(font)
        self.addToListButton.setStyleSheet("QPushButton{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}")
        self.addToListButton.setObjectName("pushButton")

        #DISCARD BUTTON

        self.discardButton = QtWidgets.QPushButton(self.centralwidget)
        self.discardButton.setGeometry(QtCore.QRect(30, 610, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(15)
        self.discardButton.setFont(font)
        self.discardButton.setStyleSheet("QPushButton{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}")
        self.discardButton.setObjectName("discardButton")
        self.discardButton.clicked.connect(self.discard)

        '''
        # ADD FAV BUTTON -> NOU DISCARD pt ca nu mai avem favorite
        self.addToFavButton = QtWidgets.QPushButton(self.centralwidget)
        self.addToFavButton.setGeometry(QtCore.QRect(30, 610, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.addToFavButton.setFont(font)
        self.addToFavButton.setStyleSheet("QPushButton{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}")
        self.addToFavButton.setObjectName("addToFavButton")
        '''
        # HOME BUTTON
        self.homeButton = QtWidgets.QPushButton(self.centralwidget)
        self.homeButton.clicked.connect(lambda: self.home(MainWindow,MangaWindow))
        self.homeButton.setGeometry(QtCore.QRect(0, 0, 31, 28))
        self.homeButton.setStyleSheet("QPushButton{\n"
"    background:rgb(151, 232, 255);\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 0px;\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}")
        self.homeButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("resources\\home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.homeButton.setIcon(icon)
        self.homeButton.setObjectName("homeButton")

        # SCORE COMBO BOX
        self.scoreComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.scoreComboBox.setGeometry(QtCore.QRect(180, 400, 211, 41))
        self.scoreComboBox.setStyleSheet("QComboBox{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"    \n"
"    selection-color:pink;\n"
"\n"
"}\n"
"\n"
"QComboBox:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}\n"
"\n"
"QComboBox QAbstractItemView{\n"
"    background-color: pink;\n"
"    color:black;\n"
" \n"
"    selection-background-color: rgb(206, 164, 196);\n"
"    selection-color: black;\n"
"}")
        self.scoreComboBox.setObjectName("scoreComboBox")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")
        self.scoreComboBox.addItem("")

        #AUTHOR COMBO BOX
        self.authorComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.authorComboBox.setGeometry(QtCore.QRect(180, 90, 451, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.authorComboBox.setFont(font)
        self.authorComboBox.setStyleSheet("QComboBox{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"    \n"
"    selection-color:pink;\n"
"\n"
"}\n"
"\n"
"QComboBox:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}\n"
"\n"
"QComboBox QAbstractItemView{\n"
"    background-color: pink;\n"
"    color:black;\n"
" \n"
"    selection-background-color: rgb(206, 164, 196);\n"
"    selection-color: black;\n"
"}")
        self.authorComboBox.setObjectName("authorComboBox")

        # GENRE COMBO BOX
        self.genreComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.genreComboBox.setGeometry(QtCore.QRect(180, 150, 271, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.genreComboBox.setFont(font)
        self.genreComboBox.setStyleSheet("QComboBox{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"    \n"
"    selection-color:pink;\n"
"\n"
"}\n"
"\n"
"QComboBox:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}\n"
"\n"
"QComboBox QAbstractItemView{\n"
"    background-color: pink;\n"
"    color:black;\n"
" \n"
"    selection-background-color: rgb(206, 164, 196);\n"
"    selection-color: black;\n"
"}")
        self.genreComboBox.setObjectName("genreComboBox")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")
        self.genreComboBox.addItem("")

        # STATUS LABLE
        self.statusLabel = QtWidgets.QLabel(self.centralwidget)
        self.statusLabel.setGeometry(QtCore.QRect(20, 200, 81, 51))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.statusLabel.setFont(font)
        self.statusLabel.setObjectName("statusLabel")

        # STATUS COMBO BOX
        self.statusComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.statusComboBox.setGeometry(QtCore.QRect(180, 210, 271, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.statusComboBox.setFont(font)
        self.statusComboBox.setStyleSheet("QComboBox{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"    color: black;\n"
"    \n"
"    selection-color:pink;\n"
"\n"
"}\n"
"\n"
"QComboBox:hover{\n"
"    background-color:rgb(206, 164, 196);\n"
"    border: 2px solid rgb(206, 164, 196);\n"
"}\n"
"\n"
"QComboBox QAbstractItemView{\n"
"    background-color: pink;\n"
"    color:black;\n"
" \n"
"    selection-background-color: rgb(206, 164, 196);\n"
"    selection-color: black;\n"
"}")
        self.statusComboBox.setObjectName("statusComboBox")
        self.statusComboBox.addItem("")
        self.statusComboBox.addItem("")
        self.statusComboBox.addItem("")
        self.statusComboBox.addItem("")
        self.statusComboBox.addItem("")

        #CHAPTERS READ LABEL
        self.chaptersReadLabel = QtWidgets.QLabel(self.centralwidget)
        self.chaptersReadLabel.setGeometry(QtCore.QRect(20, 330, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.chaptersReadLabel.setFont(font)
        self.chaptersReadLabel.setObjectName("chaptersReadLabel")

        #TOTAL NR CHAPTERS LABEL
        self.totalChaptersLabel = QtWidgets.QLabel(self.centralwidget)
        self.totalChaptersLabel.setGeometry(QtCore.QRect(20, 260, 161, 51))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI Semilight")
        font.setPointSize(12)
        self.totalChaptersLabel.setFont(font)
        self.totalChaptersLabel.setObjectName("totalChaptersLabel")

        #CHAPTERS READ EDIT
        self.chaptersReadEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.chaptersReadEdit.setGeometry(QtCore.QRect(180, 340, 221, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.chaptersReadEdit.setFont(font)
        self.chaptersReadEdit.setStyleSheet("QLineEdit{\n"
"    background: pink;\n"
"    border: 2px solid rgb(151, 232, 255);\n"
"    border-radius: 20px;\n"
"}\n"
"\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(111, 165, 171);\n"
"}\n"
"")
        self.chaptersReadEdit.setObjectName("chaptersReadEdit")

        con = sl.connect('TEMA.db')
        cursor2 = con.cursor()
        cursor2.execute("SELECT last_name  FROM Author")
        results2 = cursor2.fetchall()
        for r in results2:
            self.authorComboBox.addItem(r[0])

        MangaWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MangaWindow)
        self.statusbar.setObjectName("statusbar")
        MangaWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MangaWindow)
        QtCore.QMetaObject.connectSlotsByName(MangaWindow)



    def retranslateUi(self, MangaWindow):
        _translate = QtCore.QCoreApplication.translate
        MangaWindow.setWindowTitle(_translate("MangaWindow", "MangaWindow"))
        self.titleLabel.setText(_translate("MangaWindow", "Title"))
        self.authorLabel.setText(_translate("MangaWindow", "Author"))
        self.genreLabel.setText(_translate("MangaWindow", "Genre"))
        self.scoreLabel.setText(_translate("MangaWindow", "Score"))
        self.addToListButton.setText(_translate("MangaWindow", "Add to List"))
        self.discardButton.setText(_translate("MangaWindow", "Discard"))
        #self.addToFavButton.setText(_translate("MangaWindow", "Add to Favourites"))
        self.scoreComboBox.setItemText(0, _translate("AnimeWindow", "1"))
        self.scoreComboBox.setItemText(1, _translate("AnimeWindow", "2"))
        self.scoreComboBox.setItemText(2, _translate("AnimeWindow", "3"))
        self.scoreComboBox.setItemText(3, _translate("AnimeWindow", "4"))
        self.scoreComboBox.setItemText(4, _translate("AnimeWindow", "5"))
        self.scoreComboBox.setItemText(5, _translate("AnimeWindow", "6"))
        self.scoreComboBox.setItemText(6, _translate("AnimeWindow", "7"))
        self.scoreComboBox.setItemText(7, _translate("AnimeWindow", "8"))
        self.scoreComboBox.setItemText(8, _translate("AnimeWindow", "9"))
        self.scoreComboBox.setItemText(9, _translate("AnimeWindow", "10"))
        self.genreComboBox.setCurrentText(_translate("MangaWindow", "Action"))
        self.genreComboBox.setItemText(0, _translate("MangaWindow", "Action"))
        self.genreComboBox.setItemText(1, _translate("MangaWindow", "Adventure"))
        self.genreComboBox.setItemText(2, _translate("MangaWindow", "Comedy"))
        self.genreComboBox.setItemText(3, _translate("MangaWindow", "Drama"))
        self.genreComboBox.setItemText(4, _translate("MangaWindow", "Slice of Life"))
        self.genreComboBox.setItemText(5, _translate("MangaWindow", "Fantasy"))
        self.genreComboBox.setItemText(6, _translate("MangaWindow", "Magic"))
        self.genreComboBox.setItemText(7, _translate("MangaWindow", "Supernatural"))
        self.genreComboBox.setItemText(8, _translate("MangaWindow", "Horror"))
        self.genreComboBox.setItemText(9, _translate("MangaWindow", "Mystery"))
        self.genreComboBox.setItemText(10, _translate("MangaWindow", "Psychological"))
        self.genreComboBox.setItemText(11, _translate("MangaWindow", "Romance"))
        self.genreComboBox.setItemText(12, _translate("MangaWindow", "Sci-Fi"))
        self.statusLabel.setText(_translate("MangaWindow", "Status"))
        self.statusComboBox.setItemText(0, _translate("MangaWindow", "Reading"))
        self.statusComboBox.setItemText(1, _translate("MangaWindow", "Completed"))
        self.statusComboBox.setItemText(2, _translate("MangaWindow", "OnHold"))
        self.statusComboBox.setItemText(3, _translate("MangaWindow", "Dropped"))
        self.statusComboBox.setItemText(4, _translate("MangaWindow", "PlanToRead"))
        self.chaptersReadLabel.setText(_translate("MangaWindow", "Chapters Read"))
        self.totalChaptersLabel.setText(_translate("MangaWindow", "Total nr of chapters"))